#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var http = require('http');
var https = require('https');
var fs = require('fs');
const configs = require('./../config');

var port = configs.port;
app.set('port', port);

/**
 * Create HTTP server.
 */

var server;
if (configs.https.enabled) {
  server = https.createServer({
    key: fs.readFileSync(configs.https.key),
    cert: fs.readFileSync(configs.https.certificate)
  }, app);
} else {
  server = http.createServer(app);
}

server.listen(port);

server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ?
    'Pipe ' + port :
    'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ?
    'pipe ' + addr :
    'port ' + addr.port;
  let serverLocation = configs.https.enabled ? "https" : "http";
  serverLocation += "://localhost:"+port;
  console.log('Server is listening at:', serverLocation);
}
